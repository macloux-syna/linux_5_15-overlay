/* SPDX-License-Identifier: GPL-2.0 */
/*
 * Copyright (C) 2021 - 2023 Synaptics Incorporated
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */
#ifndef _ISPISS_FE_CLIENT_PRV_H_
#define _ISPISS_FE_CLIENT_PRV_H_

#include "ispSS_reg.h"
#include "ispSS_memmap.h"
#include "ispSS_fe_client.h"
#include "ovpdnSclWrap.h"
#include "ispBE_common.h"

#define INVALID_PACK_SEL -1
#define baseAddr_OVPDNSCL   (MEMMAP_ISP_REG_BASE + ISPSS_MEMMAP_DNSCL_REG_BASE)
#define baseAddr_TILE       (MEMMAP_ISP_REG_BASE + ISPSS_MEMMAP_TILE_REG_BASE)
#define baseAddr_DEWARP     (MEMMAP_ISP_REG_BASE + ISPSS_MEMMAP_DEWARP_REG_BASE)
#define baseAddr_CVP        (MEMMAP_ISP_REG_BASE + ISPSS_MEMMAP_FACEDET_REG_BASE)
#define baseAddr_DTILE      (MEMMAP_ISP_REG_BASE + ISPSS_MEMMAP_ROT_REG_BASE)

const INT wrClientPackSel[ISPSS_SRCFMT_MAX][ISP_CHANNEL_MAX][BIT_DEPTH_MAX] = {
	{{0x4, INVALID_PACK_SEL}, {INVALID_PACK_SEL, INVALID_PACK_SEL}},
	{{INVALID_PACK_SEL, INVALID_PACK_SEL}, {INVALID_PACK_SEL, INVALID_PACK_SEL}},
	{{0x2, 0x3}, {INVALID_PACK_SEL, INVALID_PACK_SEL}},
	{{0x4, INVALID_PACK_SEL}, {INVALID_PACK_SEL, INVALID_PACK_SEL} },
	{{0x0, 0x1}, {0x0, 0x1}},
	{{0x0, 0x1}, {0x0, 0x1}},
	{{INVALID_PACK_SEL, INVALID_PACK_SEL}, {INVALID_PACK_SEL, INVALID_PACK_SEL}},
	{{INVALID_PACK_SEL, INVALID_PACK_SEL}, {INVALID_PACK_SEL, INVALID_PACK_SEL}},
	{{0x0, 0x3}, {0x0, 0x2}},
	{{0x0, 0x3}, {0x0, 0x2}},
	{{INVALID_PACK_SEL, INVALID_PACK_SEL}, {INVALID_PACK_SEL, INVALID_PACK_SEL}},
	{{0x0, 0x3}, {0x0, 0x2}},
	{{0x0, 0x3}, {0x0, 0x2}},
	{{INVALID_PACK_SEL, INVALID_PACK_SEL}, {INVALID_PACK_SEL, INVALID_PACK_SEL}}
};

const INT rdClientPackSel[ISPSS_SRCFMT_MAX][ISP_CHANNEL_MAX][BIT_DEPTH_MAX] = {
	{{0x5, INVALID_PACK_SEL}, {INVALID_PACK_SEL, INVALID_PACK_SEL}},
	{{INVALID_PACK_SEL, INVALID_PACK_SEL}, {INVALID_PACK_SEL, INVALID_PACK_SEL}},
	{{0x2, 0x3}, {INVALID_PACK_SEL, INVALID_PACK_SEL}},
	{{0x5, INVALID_PACK_SEL}, {INVALID_PACK_SEL, INVALID_PACK_SEL}},
	{{0x0, 0x1}, {0x0, 0x1}},
	{{0x0, 0x1}, {0x0, 0x1}},
	{{INVALID_PACK_SEL, 0x4}, {INVALID_PACK_SEL, 0x2}},
	{{INVALID_PACK_SEL, 0x4}, {INVALID_PACK_SEL, 0x2}},
	{{INVALID_PACK_SEL, INVALID_PACK_SEL}, {INVALID_PACK_SEL, INVALID_PACK_SEL}},
	{{INVALID_PACK_SEL, INVALID_PACK_SEL}, {INVALID_PACK_SEL, INVALID_PACK_SEL}},
	{{INVALID_PACK_SEL, INVALID_PACK_SEL}, {INVALID_PACK_SEL, INVALID_PACK_SEL}},
	{{INVALID_PACK_SEL, INVALID_PACK_SEL}, {INVALID_PACK_SEL, INVALID_PACK_SEL}},
	{{INVALID_PACK_SEL, INVALID_PACK_SEL}, {INVALID_PACK_SEL, INVALID_PACK_SEL}},
	{{INVALID_PACK_SEL, INVALID_PACK_SEL}, {INVALID_PACK_SEL, INVALID_PACK_SEL}},
};

const INT wrClientAddress[ISP_WR_CHANNEL_MAX] = {
	baseAddr_OVPDNSCL + RA_OVPDNSCLWRAP_OVPSCL_WR0,
	baseAddr_OVPDNSCL+RA_OVPDNSCLWRAP_OVPSCL_WR1,
	0, 0, 0, 0, 0, 0
};


const INT rdClientAddress[ISP_RD_CHANNEL_MAX] = {baseAddr_OVPDNSCL,
	baseAddr_OVPDNSCL,
	0, 0, 0, 0, 0, 0
};

#endif
